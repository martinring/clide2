/*             _ _     _                                                      *\
**            | (_)   | |                                                     **
**         ___| |_  __| | ___      clide 2                                    **
**        / __| | |/ _` |/ _ \     (c) 2012-2014 Martin Ring                  **
**       | (__| | | (_| |  __/     http://clide.flatmap.net                   **
**        \___|_|_|\__,_|\___|                                                **
**                                                                            **
**   This file is part of Clide.                                              **
**                                                                            **
**   Clide is free software: you can redistribute it and/or modify            **
**   it under the terms of the GNU Lesser General Public License as           **
**   published by the Free Software Foundation, either version 3 of           **
**   the License, or (at your option) any later version.                      **
**                                                                            **
**   Clide is distributed in the hope that it will be useful,                 **
**   but WITHOUT ANY WARRANTY; without even the implied warranty of           **
**   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            **
**   GNU General Public License for more details.                             **
**                                                                            **
**   You should have received a copy of the GNU Lesser General Public         **
**   License along with Clide.                                                **
**   If not, see <http://www.gnu.org/licenses/>.                              **
\*                                                                            */

@type: rgb(43,145,175);
@keyword: blue;
@string: rgb(3, 106, 7);
@variable: #00009b;
@verbatim: gray;
@comment: rgb(76, 136, 107);

@font-face {
  font-family: 'Computer Modern';
  src: url('/client/fonts/MathJax_Main-Regular.otf');
}

@font-face {
  font-family: 'Computer Modern';
  font-style: italic;
  src: url('/client/fonts/MathJax_Main-Italic.otf');
}

@font-face {
  font-family: 'Computer Modern';
  font-weight: bold;
  src: url('/client/fonts/MathJax_Main-Bold.ttf');
}

@font-face {
  font-family: 'IsabelleText';
  src: url('/client/fonts/IsabelleText.ttf');
}

@font-face {
  font-family: 'IsabelleText';
  font-weight: bold;
  src: url('/client/fonts/IsabelleTextBold.ttf');
}


@font-face {
  font-family: 'AMS';
  src: url('/client/fonts/MathJax_AMS-Regular.otf');
}

@font-face {
  font-family: 'Math';
  src: url('/client/fonts/MathJax_Math-Regular.otf');
}

@font-face {
  font-family: 'Math';
  font-style: italic;
  src: url('/client/fonts/MathJax_Math-Italic.otf');
}

@font-face {
  font-family: 'Math';
  font-weight: bold;
  font-style: italic;
  src: url('/client/fonts/MathJax_Math-BoldItalic.otf');
}

 /* outer syntax */
.cm-s-default {
  span.sup {
    font-size: 66%;
    line-height: 0;
    vertical-align: super;
  }
  span.sub {
    font-size: 66%;
    line-height: 0;
    vertical-align: sub;
  }
  span.bold {
    font-weight: bold;
  }
  .symbol {
    /*font-family: 'AMS', 'Math';*/
  }
  span.cm-keyword {
    color: @keyword;
  }
  span.cm-operator {

  }
  span.cm-command, span.cm-command {
    color: @keyword;
    font-weight: bold;
  }
  span.cm-string {
    /*color: gray;*/
    /*background: rgba(0,0,0,0.05);*/
  }
  span.cm-altstring {
    background: rgba(0,0,0,0.05);
  }
  span.cm-verbatim {
    /*background: rgba(0,0,0,0.05);*/
    color: @verbatim;
  }
  span.comment {
    color: @comment;
  }
  span.cm-malformed {
    text-decoration: line-through;
  }

  span.command_span {

  }
  span.ignored_span {

  }
  span.malformed_span {

  }
  /* inner syntax */
  span.cm-tfree {
    font-style: italic;
    color: @type
  }
  span.cm-tvar {
    color: @type
  }
  span.cm-entity {
    &:hover {
      text-decoration: underline;
    }
  }
  span.cm-free, span.cm-term, span.free, span.term {
    color: blue;
  }
  span.skolem {
    color: #d2691e
  }
  span.bound {
    color: green
  }
  span.var {
    color: @variable
  }
  span.numeral {

  }
  span.literal {

  }
  span.delimiter, span.control {
    color: gray;
  }
  span.inner_string {

  }
  span.inner_comment {

  }
  span.token_range {

  }
  span.sort {

  }
  span.typ {

  }
  span.term {

  }
  span.prop {

  }

  span.typing {

  }

  span.attribute {

  }

  span.method {

  }


  /* embedded source text */
  span.ML_source {

  }
  span.doc_source {

  }
  span.antiq {

  }

    /* ML syntax */

  span.ML_keyword {
    color: @keyword
  }
  span.ML_delimiter {

  }
  span.ML_tvar {

  }
  span.ML_numeral {
    color: red
  }
  span.ML_char {
    color: @string
  }
  span.ML_string {
    color: @string
  }
  span.ML_comment {
    color: #8b0000
  }
  span.ML_malform {
    color: #ff6a6a
  }
  span.ML_def {

  }
  span.ML_open {

  }
  span.ML_struct {

  }
  span.ML_typing {

  }

  span.error, span.bad {
    background-color: fade(@brand-danger,20%);
  }

  span.warning {
    background-color: fade(@brand-warning,20%);
  }

  span.info, span.writeln {
    background-color: fade(@brand-info,20%);
  }
}

div.gutter-state-running {
  background: @brand-warning;
  display: inline;
  height: 100%;
  border-left: 3px solid @brand-warning;
}
div.gutter-state-pending {
  display: inline;
  height: 100%;
  border-left: 3px solid @gray;
}
div.gutter-state-error {
  display: inline;
  height: 100%;
  border-left: 3px solid @brand-danger;
}
div.gutter-state-failed {
  display: inline;
  height: 100%;
  border-left: 3px solid @brand-danger;
}
div.gutter-state-warning {
  display: inline;
  height: 100%;
  border-left: 3px solid @brand-warning;
}
.current_line.cm-control {
  font-size: inherit !important;
}

/*
  val PROTOCOL = "protocol"
  val SYSTEM = "system"
  val STDOUT = "stdout"
  val STDERR = "stderr"
  val EXIT = "exit"

  val LEGACY = "legacy"

  val NO_REPORT = "no_report"

  val BAD = "bad"

*/

.outputWidget {
  .user-select(auto);
  margin-top: 2px;
  margin-left: 8px;
  padding-left: 8px;
  background: rgba(0,0,0,0.05);
  border-left: 8px solid @brand-primary;
  white-space: pre;
  overflow: hidden;
  &.error {
    border-left-color: @brand-danger;
  }
  &.warning {
    border-left-color: @brand-warning;
  }
  &.info, &.writeln {
    border-left-color: @brand-info;
  }
}
